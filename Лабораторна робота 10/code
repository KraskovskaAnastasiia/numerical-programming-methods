import matplotlib.pyplot as plt
from scipy.interpolate import UnivariateSpline
from numpy import *
import sympy as sp
from matplotlib import style
import numpy as np
from sympy import *
x = [0.6, 0.7, 1.0, 1.5, 1.9]  
y = [2.64, 3.73, 1.42, 1.84, 0.65]  
  
print("Array of x: ", x)  
print("Array of y: ", y)  
  
h = []  
for i in range(len(x)):  
    h_i = x[i] - x[i-1]  
    h.append(h_i)  
print("Array of h:", (np.round(h, 4)))  
  
m = []  
for i in range(len(h)):  
    m_i = 2*(h[i-1]+h[i])  
    m.append(m_i)  
print("Array of M:", (np.round (m, 4)))  
  
k = []  
for i in range(len(x)):  
    k_i = 3*(((y[i] - y[i-1])/h[i])-(y[i-1]-y[i-2])/h[i-1])  
    k.append(k_i)  
print("Array of K:", (np.round(k, 4)))  
  
alpha1 = 0  
beta1 = 0  
alpha2 = k[2]/m[2]  
beta2 = h[2]/m[2]  
print("Alpha 2 = ", alpha2)  
print("Beta 2 = ", (np.round (beta2, 4)))  
  
alpha3 = (k[3]-(h[2]*alpha2))/(m[3]- (h[2]*beta2))  
beta3 = (h[3])/(m[3]-(h[2]*beta2))  
print ("Alpha 3 = ", (np.round (alpha3, 4)))  
print ("Beta 3 = ", (np.round (beta3, 4)))  
  
alpha4 = (k[4]-h[3]*alpha3)/(m[4]- h[3]*beta3)  
beta4 = (h[4])/(m[4]-(h[3]*beta3))  
print ("Alpha 4 = ", (np.round (alpha4, 4)))  
print ("Beta 4 = ", (np.round (beta4, 4)))  
  
print("----------------------reverse----------------------")  
print("find the coefficients c")  
c5 = 0  
c4 = alpha4-(beta4*c5)  
c3 = alpha3-(beta3*c4)  
c2 = alpha2-(beta2*c3)  
c1 = alpha1-(beta1*c2)  
print ("c1 = ", (np.round (c1, 4)))  
print ("c2 = ", (np.round (c2, 4)))  
print ("c3 = ", (np.round (c3, 4)))  
print ("c4 = ", (np.round (c4, 4)))  
print ("c5 = ", (np.round (c5, 4)))  
  
print("\nfind the coefficients d")  
d5 = 0  
d4 = (c5-c4)/(3*h[4])  
d3 = (c4-c3)/(3*h[3])  
d2 = (c3-c2)/(3*h[2])  
d1 = (c2-c1)/(3*h[1])  
print ("d1 = ", (np.round (d1, 4)))  
print ("d2 = ", (np.round (d2, 4)))  
print ("d3 = ", (np.round (d3, 4)))  
print ("d4 = ", (np.round (d4, 4)))  
print ("d5 = ", (np.round (d5, 4)))  
  
print("\nfind the coefficients b")  
b4 = ((y[4]-y[3])/h[4])-((c5+(2*c4))*h[4])/3  
b3 = ((y[3]-y[2])/h[3])-((c4+(2*c3))*h[3])/3  
b2 = ((y[2]-y[1])/h[2])-((c3+(2*c2))*h[2])/3  
b1 = ((y[1]-y[0])/h[1])-((c2+(2*c1))*h[1])/3  
print ("b1 = ", (np.round (b1, 4)))  
print ("b2 = ", (np.round (b2, 4)))  
print ("b3 = ", (np.round (b3, 4)))  
print ("b4 = ", (np.round (b4, 4)))

x = Symbol('x')
print("----------------------Spline----------------------")  
p1 = y[0] + b1*(x-0) + c1*((x-0)**2) + d1*((x-0)**3)
p2 = y[1] + b2*(x-0) + c2*((x-0)**2) + d2*((x-0)**3)
p3 = y[2] + b3*(x-0) + c3*((x-0)**2) + d3*((x-0)**3)
p4 = y[3] + b4*(x-0) + c4*((x-0)**2) + d4*((x-0)**3)
print ("(1) = ", p1, "\n(2) = ", p2, "\n(3) = ", p3, "\n(4) = ", p4)

print('\n\nValues of the spline at given points:')
print("\n point 1 = ", y[0], "\n point 2 = ", y[1], "\n point 3 = ", y[2], "\n point 4 = ", y[3])


x = [0.6, 0.7, 1.0, 1.5, 1.9] 
y = [2.64, 3.73, 1.42, 1.84, 0.65] 
p = [2.64, 3.73, 1.42, 1.84, 0.65] 
 
plt.plot(x,y,'g--',linewidth=1) 
plt.plot(x, p, '*', color = '#f47a60', linewidth=3) 
plt.legend (['Spline', 'Points']) 
plt.title ("Spline Interpolation") 
 
plt.show()
